cat("\n testing ",v[element])
if (v[element] <= pivote) {
cat("\n",v[element]," va a la izquierda de ",pivote)
izq = c(izq, v[element])
}
}
}
if (posicion.pivote < len) {
for (element in posicion.pivote + 1: len) {
cat("\n right element nº",element)
cat("\n testing ",v[element])
if (v[element] > pivote) {
cat("\n",v[element]," va a la derecha de ",pivote)
der = c(der, v[element])
}
}
}
cat("\n", izq, " | ", der)
cat("\n ----------------------")
if (length(izq) > 1) {
izq <- quicksort(izq)
}
if (length(der) > 1) {
der <- quicksort(der)
}
return(c(izq, pivote, der))
}
v <- c(8, 3, -1, 0, -1, -1)
result <- quicksort(v)
for(x in c(1:10)){}
for(x in c(1:10)){cat("\n,"x)}
for(x in c(1:10)){cat("\n",x)}
quicksort <- function(v) {
len <- length(v)
posicion.pivote <- sample(c(1: len), 1)
pivote <- v[posicion.pivote]
cat("\n pivote: ", pivote," en posicion: ",posicion.pivote)
izq <- c()
der <- c()
if (posicion.pivote > 1) {
for (element in c(1: posicion.pivote-1)) {
cat("\n left element nº",element)
cat("\n testing ",v[element])
if (v[element] <= pivote) {
cat("\n",v[element]," va a la izquierda de ",pivote)
izq = c(izq, v[element])
}
}
}
if (posicion.pivote < len) {
for (element in c(posicion.pivote + 1 : len)) {
cat("\n right element nº",element)
cat("\n testing ",v[element])
if (v[element] > pivote) {
cat("\n",v[element]," va a la derecha de ",pivote)
der = c(der, v[element])
}
}
}
cat("\n", izq, " | ", der)
cat("\n ----------------------")
if (length(izq) > 1) {
izq <- quicksort(izq)
}
if (length(der) > 1) {
der <- quicksort(der)
}
return(c(izq, pivote, der))
}
v <- c(8, 3, -1, 0, -1, -1)
result <- quicksort(v)
quicksort <- function(v) {
len <- length(v)
posicion.pivote <- sample(c(1: len), 1)
pivote <- v[posicion.pivote]
cat("\n pivote: ", pivote," en posicion: ",posicion.pivote)
izq <- c()
der <- c()
if (posicion.pivote > 1) {
for (element in c(1: posicion.pivote-1)) {
cat("\n left element nº",element)
cat("\n testing ",v[element])
if (v[element] <= pivote) {
cat("\n",v[element]," va a la izquierda de ",pivote)
izq = c(izq, v[element])
}
}
}
if (posicion.pivote < len) {
for (element in c(posicion.pivote + 1 : len-1)) {
cat("\n right element nº",element)
cat("\n testing ",v[element])
if (v[element] > pivote) {
cat("\n",v[element]," va a la derecha de ",pivote)
der = c(der, v[element])
}
}
}
cat("\n", izq, " | ", der)
cat("\n ----------------------")
if (length(izq) > 1) {
izq <- quicksort(izq)
}
if (length(der) > 1) {
der <- quicksort(der)
}
return(c(izq, pivote, der))
}
v <- c(8, 3, -1, 0, -1, -1)
result <- quicksort(v)
v[0]
v[1]
quicksort <- function(v) {
len <- length(v)
posicion.pivote <- sample(c(1: len), 1)
pivote <- v[posicion.pivote]
cat("\n pivote: ", pivote," en posicion: ",posicion.pivote)
izq <- c()
der <- c()
if (posicion.pivote > 1) {
for (element in c(1: posicion.pivote-1)) {
cat("\n left element nº",element)
cat("\n testing ",v[element])
if (v[element] <= pivote) {
cat("\n",v[element]," va a la izquierda de ",pivote)
izq = c(izq, v[element])
}
}
}
if (posicion.pivote < len) {
for (element in c(posicion.pivote + 1 : len)) {
cat("\n right element nº",element)
cat("\n testing ",v[element])
if (v[element] > pivote) {
cat("\n",v[element]," va a la derecha de ",pivote)
der = c(der, v[element])
}
}
}
cat("\n", izq, " | ", der)
cat("\n ----------------------")
if (length(izq) > 1) {
izq <- quicksort(izq)
}
if (length(der) > 1) {
der <- quicksort(der)
}
return(c(izq, pivote, der))
}
v <- c(8, 3, -1, 0, -1, -1)
result <- quicksort(v)
result <- quicksort(v)
result <- quicksort(v)
result <- quicksort(v)
result <- quicksort(v)
result <- quicksort(v)
quicksort <- function(v) {
len <- length(v)
posicion.pivote <- sample(c(1: len), 1)
pivote <- v[posicion.pivote]
cat("\n pivote: ", pivote," en posicion: ",posicion.pivote)
izq <- c()
der <- c()
if (posicion.pivote > 1) {
for (element in 1: posicion.pivote-1) {
cat("\n left element nº", element)
cat("\n testing ",v[element])
if (v[element] <= pivote) {
cat("\n",v[element]," va a la izquierda de ",pivote)
izq = c(izq, v[element])
}
}
}
if (posicion.pivote < len) {
for (element in posicion.pivote + 1 : len) {
cat("\n right element nº", element)
cat("\n testing ",v[element])
if (v[element] > pivote) {
cat("\n",v[element]," va a la derecha de ",pivote)
der = c(der, v[element])
}
}
}
cat("\n", izq, " | ", der)
cat("\n ----------------------")
if (length(izq) > 1) {
izq <- quicksort(izq)
}
if (length(der) > 1) {
der <- quicksort(der)
}
return(c(izq, pivote, der))
}
v <- c(8, 3, -1, 0, -1, -1)
result <- quicksort(v)
result <- quicksort(v)
result <- quicksort(v)
result <- quicksort(v)
result <- quicksort(v)
result <- quicksort(v)
result <- quicksort(v)
quicksort <- function(v) {
len <- length(v)
posicion.pivote <- sample(c(1: len), 1)
pivote <- v[posicion.pivote]
cat("\n pivote: ", pivote," en posicion: ",posicion.pivote)
izq <- c()
der <- c()
if (posicion.pivote > 1) {
for (element in c(1: posicion.pivote-1)) {
cat("\n left element n?", element)
cat("\n testing ",v[element])
if (v[element] <= pivote) {
cat("\n",v[element]," va a la izquierda de ",pivote)
izq = c(izq, v[element])
}
}
}
if (posicion.pivote < len) {
for (element in c(posicion.pivote + 1 : len)) {
cat("\n right element n?", element)
cat("\n testing ",v[element])
if (v[element] > pivote) {
cat("\n",v[element]," va a la derecha de ",pivote)
der = c(der, v[element])
}
}
}
cat("\n", izq, " | ", der)
cat("\n ----------------------")
if (length(izq) > 1) {
izq <- quicksort(izq)
}
if (length(der) > 1) {
der <- quicksort(der)
}
return(c(izq, pivote, der))
}
v <- c(8, 3, -1, 0, -1, -1)
result <- quicksort(v)
quicksort <- function(v) {
len <- length(v)
posicion.pivote <- sample(c(1: len), 1)
pivote <- v[posicion.pivote]
cat("\n pivote: ", pivote," en posicion: ",posicion.pivote)
izq <- c()
der <- c()
if (posicion.pivote > 1) {
for (element in c(1: posicion.pivote-1)) {
cat("\n left element n", element)
cat("\n testing ",v[element])
if (v[element] <= pivote) {
cat("\n",v[element]," va a la izquierda de ",pivote)
izq = c(izq, v[element])
}
}
}
if (posicion.pivote < len) {
for (element in c(posicion.pivote + 1 : len)) {
cat("\n right element n", element)
cat("\n testing ",v[element])
if (v[element] > pivote) {
cat("\n",v[element]," va a la derecha de ",pivote)
der = c(der, v[element])
}
}
}
cat("\n", izq, " | ", der)
cat("\n ----------------------")
if (length(izq) > 1) {
izq <- quicksort(izq)
}
if (length(der) > 1) {
der <- quicksort(der)
}
return(c(izq, pivote, der))
}
v <- c(8, 3, -1, 0, -1, -1)
result <- quicksort(v)
print(result)
result <- quicksort(v)
print(result)
quicksort <- function(v) {
len <- length(v)
posicion.pivote <- sample(c(1: len), 1)
pivote <- v[posicion.pivote]
cat("\n pivote: ", pivote," en posicion: ",posicion.pivote)
izq <- c()
der <- c()
if (posicion.pivote > 1) {
for (element in c(2: posicion.pivote-1)) {
cat("\n left element n", element)
cat("\n testing ",v[element])
if (v[element] <= pivote) {
cat("\n",v[element]," va a la izquierda de ",pivote)
izq = c(izq, v[element])
}
}
}
if (posicion.pivote < len) {
for (element in c(posicion.pivote + 1 : len)) {
cat("\n right element n", element)
cat("\n testing ",v[element])
if (v[element] > pivote) {
cat("\n",v[element]," va a la derecha de ",pivote)
der = c(der, v[element])
}
}
}
cat("\n", izq, " | ", der)
cat("\n ----------------------")
if (length(izq) > 1) {
izq <- quicksort(izq)
}
if (length(der) > 1) {
der <- quicksort(der)
}
return(c(izq, pivote, der))
}
v <- c(8, 3, -1, 0, -1, -1)
result <- quicksort(v)
quicksort <- function(v) {
len <- length(v)
posicion.pivote <- sample(c(1: len), 1)
pivote <- v[posicion.pivote]
cat("\n pivote: ", pivote," en posicion: ",posicion.pivote)
izq <- c()
der <- c()
if (posicion.pivote > 1) {
for (element in c(2: posicion.pivote-1)) {
cat("\n left element n", element)
cat("\n testing ",v[element])
if (v[element] <= pivote) {
cat("\n",v[element]," va a la izquierda de ",pivote)
izq = c(izq, v[element])
}
}
}
if (posicion.pivote < len) {
for (element in c(posicion.pivote + 1 : len-1)) {
cat("\n right element n", element)
cat("\n testing ",v[element])
if (v[element] > pivote) {
cat("\n",v[element]," va a la derecha de ",pivote)
der = c(der, v[element])
}
}
}
cat("\n", izq, " | ", der)
cat("\n ----------------------")
if (length(izq) > 1) {
izq <- quicksort(izq)
}
if (length(der) > 1) {
der <- quicksort(der)
}
return(c(izq, pivote, der))
}
v <- c(8, 3, -1, 0, -1, -1)
result <- quicksort(v)
for (element in c(posicion.pivote + 1 : len-2)) {
cat("\n right element n", element)
cat("\n testing ",v[element])
if (v[element] > pivote) {
cat("\n",v[element]," va a la derecha de ",pivote)
der = c(der, v[element])
}
}
quicksort <- function(v) {
len <- length(v)
posicion.pivote <- sample(c(1: len), 1)
pivote <- v[posicion.pivote]
cat("\n pivote: ", pivote," en posicion: ",posicion.pivote)
izq <- c()
der <- c()
if (posicion.pivote > 1) {
for (element in c(2: posicion.pivote-1)) {
cat("\n left element n", element)
cat("\n testing ",v[element])
if (v[element] <= pivote) {
cat("\n",v[element]," va a la izquierda de ",pivote)
izq = c(izq, v[element])
}
}
}
if (posicion.pivote < len) {
for (element in c(posicion.pivote + 1 : len-2)) {
cat("\n right element n", element)
cat("\n testing ",v[element])
if (v[element] > pivote) {
cat("\n",v[element]," va a la derecha de ",pivote)
der = c(der, v[element])
}
}
}
cat("\n", izq, " | ", der)
cat("\n ----------------------")
if (length(izq) > 1) {
izq <- quicksort(izq)
}
if (length(der) > 1) {
der <- quicksort(der)
}
return(c(izq, pivote, der))
}
v <- c(8, 3, -1, 0, -1, -1)
result <- quicksort(v)
7:10
quicksort <- function(v) {
len <- length(v)
posicion.pivote <- sample(c(1: len), 1)
pivote <- v[posicion.pivote]
cat("\n pivote: ", pivote," en posicion: ",posicion.pivote)
izq <- c()
der <- c()
if (posicion.pivote > 1) {
for (element in c(1: posicion.pivote-1)) {
cat("\n left element n", element)
cat("\n testing ",v[element])
if (v[element] <= pivote) {
cat("\n",v[element]," va a la izquierda de ",pivote)
izq = c(izq, v[element])
}
}
}
if (posicion.pivote < len) {
for (element in c(posicion.pivote + 1 : len)) {
cat("\n right element n", element)
cat("\n testing ",v[element])
if (v[element] > pivote) {
cat("\n",v[element]," va a la derecha de ",pivote)
der = c(der, v[element])
}
}
}
cat("\n", izq, " | ", der)
cat("\n ----------------------")
if (length(izq) > 1) {
izq <- quicksort(izq)
}
if (length(der) > 1) {
der <- quicksort(der)
}
return(c(izq, pivote, der))
}
v <- c(8, 3, -1, 0, -1, -1)
result <- quicksort(v)
v <- c(4,5,3,2,6)
result <- quicksort(v)
install.packages("spatstat")
library(spatstat)
data(cells)
knitr::opts_chunk$set(echo = TRUE)
library(spatstat)
library(tidyverse)
data <- read.csv(file="data/Bases_Bicimad.csv")
summary(data)
names(data) <- c("longitude","latitude","object.ID","station","UTM.easting","UTM.northing","district",
"neighborhood","street","number","stands","capacity","stand.type","province.code",
"city.code","postal.code"
)
summary(data)
data<-select(data,-c(capacity,stand.type,province.code,city.code))
summary(data)
#data.subset.1<-select(data, c(longitude,latitude,stands))
data.subset.1<-select(data, c(longitude,latitude))
x.min<-min(data$longitude)
x.max<-max(data$longitude)
y.min<-min(data$latitude)
y.max<-max(data$latitude)
window <- owin(c(x.min, x.max),c(y.min,y.max))
summary(window)
spatial.data<-as.ppp(X=data.subset.1,W=window)
summary(spatial.data)
plot(spatial.data,NULL)
pfit <- ppm(spatial.data, ~latitude)
pfit <- ppm(spatial.data)
plot(pfit)
pfit <- ppm(spatial.data,~1)
plot(pfit)
pfit <- ppm(spatial.data,~longitude)
pfit <- ppm(spatial.data,~spatial.data$longitude)
pfit <- ppm(spatial.data,~spatial.data$longitude)
pfit <- ppm(spatial.data,~y)
plot(pfit)
summary(pfit)
pfit <- ppm(spatial.data,~x+y)
plot(pfit)
summary(pfit)
shiny::runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/HeatmapApp')
library(wordcloud2)
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/HeatmapApp')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/HeatmapApp')
shiny::runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
shiny::runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/WordCloudApp')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/WordCloudApp')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
runApp('C:/Users/Mariano/Google Drive/eit-health/semestre-1/big-data/practice/big-data-2019/visualization/Final')
